"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = __importDefault(require("../index"));
var cucumber_messages_1 = require("cucumber-messages");
var IdGenerator_1 = require("../IdGenerator");
var args = process.argv.slice(2);
var options = {
    defaultDialect: 'en',
    includeSource: true,
    includeGherkinDocument: true,
    includePickles: true,
    newId: IdGenerator_1.uuid(),
};
var json = false;
var paths = [];
while (args.length > 0) {
    var arg = args.shift();
    switch (arg) {
        case '--no-source':
            options.includeSource = false;
            break;
        case '--no-ast':
            options.includeGherkinDocument = false;
            break;
        case '--no-pickles':
            options.includePickles = false;
            break;
        case '--json':
            json = true;
            break;
        case '--predictable-ids':
            options.newId = IdGenerator_1.incrementing();
            break;
        default:
            paths.push(arg);
    }
}
var messageStream = paths.length === 0
    ? index_1.default.fromStream(process.stdin, options)
    : index_1.default.fromPaths(paths, options);
var encodedStream = json
    ? messageStream.pipe(new cucumber_messages_1.ProtobufNdjsonStream())
    : messageStream.pipe(new cucumber_messages_1.ProtobufBinaryStream(cucumber_messages_1.messages.Envelope.encodeDelimited.bind(cucumber_messages_1.messages.Envelope)));
encodedStream.pipe(process.stdout);
//# sourceMappingURL=main.js.map